@model BAPSLansdaleAddressManager.Models.Person

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Person</legend>

        @Html.HiddenFor(model => model.PersonID)

        <div class="editor-label">
            @Html.LabelFor(model => model.FirstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.MiddleName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.MiddleName)
            @Html.ValidationMessageFor(model => model.MiddleName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CategoryId, "Category")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CategoryId", String.Empty)
            @Html.ValidationMessageFor(model => model.CategoryId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsBadAddress)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsBadAddress)
            @Html.ValidationMessageFor(model => model.IsBadAddress)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateOfBirth)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateOfBirth)
            @Html.ValidationMessageFor(model => model.DateOfBirth)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Gender)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Gender)
            @Html.ValidationMessageFor(model => model.Gender)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsKarykar)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsKarykar)
            @Html.ValidationMessageFor(model => model.IsKarykar)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AddressId, "Address")
        </div>
        <div class="editor-field">
            @Html.DropDownList("AddressId", String.Empty)
            @Html.ValidationMessageFor(model => model.AddressId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HomePhone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.HomePhone)
            @Html.ValidationMessageFor(model => model.HomePhone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CellPhone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CellPhone)
            @Html.ValidationMessageFor(model => model.CellPhone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Native)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Native)
            @Html.ValidationMessageFor(model => model.Native)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Type)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Type)
            @Html.ValidationMessageFor(model => model.Type)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EntryDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EntryDate)
            @Html.ValidationMessageFor(model => model.EntryDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ModifyDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ModifyDate)
            @Html.ValidationMessageFor(model => model.ModifyDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.KarykarId)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.KarykarId)
            @Html.ValidationMessageFor(model => model.KarykarId)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Active)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Active)
            @Html.ValidationMessageFor(model => model.Active)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OldPhoneNo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OldPhoneNo)
            @Html.ValidationMessageFor(model => model.OldPhoneNo)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConsiderForSampark)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConsiderForSampark)
            @Html.ValidationMessageFor(model => model.ConsiderForSampark)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Notes)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Notes)
            @Html.ValidationMessageFor(model => model.Notes)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

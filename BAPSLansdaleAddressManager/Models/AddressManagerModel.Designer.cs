//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_Addresses_CityId", "CityNames", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAPSLansdaleAddressManager.Models.CityName), "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.Address), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_Persons_AddressID", "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAPSLansdaleAddressManager.Models.Address), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.Person), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_ZoneKaryakar_AddressID", "Addresses", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAPSLansdaleAddressManager.Models.Address), "ZoneKaryakar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.ZoneKaryakar), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_Persons_CategoryId", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAPSLansdaleAddressManager.Models.Category), "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.Person), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_zonecities_CityNames", "CityNames", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAPSLansdaleAddressManager.Models.CityName), "ZoneCities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.ZoneCity), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_PersonEventFlags_EventFlagId", "EventFlags", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAPSLansdaleAddressManager.Models.EventFlag), "PersonEventFlags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.PersonEventFlag), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_PersonEventFlags_PersonId", "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAPSLansdaleAddressManager.Models.Person), "PersonEventFlags", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.PersonEventFlag), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_PersonId", "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAPSLansdaleAddressManager.Models.Person), "PersonRelationships", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.PersonRelationship), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_RelatedPersonId", "Persons", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAPSLansdaleAddressManager.Models.Person), "PersonRelationships", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.PersonRelationship), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_RelationshipTypeID", "RelationshipTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAPSLansdaleAddressManager.Models.RelationshipType), "PersonRelationships", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.PersonRelationship), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_zonecities_zones", "Zones", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAPSLansdaleAddressManager.Models.Zone), "ZoneCities", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.ZoneCity), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_ZoneKaryakar_zones", "Zones", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BAPSLansdaleAddressManager.Models.Zone), "ZoneKaryakar", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.ZoneKaryakar), true)]
[assembly: EdmRelationshipAttribute("BAPSLansdaleModel", "FK_Users_RoleId", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAPSLansdaleAddressManager.Models.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAPSLansdaleAddressManager.Models.User), true)]

#endregion

namespace BAPSLansdaleAddressManager.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BAPSLansdaleEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new BAPSLansdaleEntities object using the connection string found in the 'BAPSLansdaleEntities' section of the application configuration file.
        /// </summary>
        public BAPSLansdaleEntities() : base("name=BAPSLansdaleEntities", "BAPSLansdaleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BAPSLansdaleEntities object.
        /// </summary>
        public BAPSLansdaleEntities(string connectionString) : base(connectionString, "BAPSLansdaleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new BAPSLansdaleEntities object.
        /// </summary>
        public BAPSLansdaleEntities(EntityConnection connection) : base(connection, "BAPSLansdaleEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CityName> CityNames
        {
            get
            {
                if ((_CityNames == null))
                {
                    _CityNames = base.CreateObjectSet<CityName>("CityNames");
                }
                return _CityNames;
            }
        }
        private ObjectSet<CityName> _CityNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventFlag> EventFlags
        {
            get
            {
                if ((_EventFlags == null))
                {
                    _EventFlags = base.CreateObjectSet<EventFlag>("EventFlags");
                }
                return _EventFlags;
            }
        }
        private ObjectSet<EventFlag> _EventFlags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonEventFlag> PersonEventFlags
        {
            get
            {
                if ((_PersonEventFlags == null))
                {
                    _PersonEventFlags = base.CreateObjectSet<PersonEventFlag>("PersonEventFlags");
                }
                return _PersonEventFlags;
            }
        }
        private ObjectSet<PersonEventFlag> _PersonEventFlags;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonRelationship> PersonRelationships
        {
            get
            {
                if ((_PersonRelationships == null))
                {
                    _PersonRelationships = base.CreateObjectSet<PersonRelationship>("PersonRelationships");
                }
                return _PersonRelationships;
            }
        }
        private ObjectSet<PersonRelationship> _PersonRelationships;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Persons
        {
            get
            {
                if ((_Persons == null))
                {
                    _Persons = base.CreateObjectSet<Person>("Persons");
                }
                return _Persons;
            }
        }
        private ObjectSet<Person> _Persons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelationshipType> RelationshipTypes
        {
            get
            {
                if ((_RelationshipTypes == null))
                {
                    _RelationshipTypes = base.CreateObjectSet<RelationshipType>("RelationshipTypes");
                }
                return _RelationshipTypes;
            }
        }
        private ObjectSet<RelationshipType> _RelationshipTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ZoneCity> ZoneCities
        {
            get
            {
                if ((_ZoneCities == null))
                {
                    _ZoneCities = base.CreateObjectSet<ZoneCity>("ZoneCities");
                }
                return _ZoneCities;
            }
        }
        private ObjectSet<ZoneCity> _ZoneCities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ZoneKaryakar> ZoneKaryakars
        {
            get
            {
                if ((_ZoneKaryakars == null))
                {
                    _ZoneKaryakars = base.CreateObjectSet<ZoneKaryakar>("ZoneKaryakars");
                }
                return _ZoneKaryakars;
            }
        }
        private ObjectSet<ZoneKaryakar> _ZoneKaryakars;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Zone> Zones
        {
            get
            {
                if ((_Zones == null))
                {
                    _Zones = base.CreateObjectSet<Zone>("Zones");
                }
                return _Zones;
            }
        }
        private ObjectSet<Zone> _Zones;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CityNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCityNames(CityName cityName)
        {
            base.AddObject("CityNames", cityName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventFlags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventFlags(EventFlag eventFlag)
        {
            base.AddObject("EventFlags", eventFlag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonEventFlags EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonEventFlags(PersonEventFlag personEventFlag)
        {
            base.AddObject("PersonEventFlags", personEventFlag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonRelationships EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonRelationships(PersonRelationship personRelationship)
        {
            base.AddObject("PersonRelationships", personRelationship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Persons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersons(Person person)
        {
            base.AddObject("Persons", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelationshipTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelationshipTypes(RelationshipType relationshipType)
        {
            base.AddObject("RelationshipTypes", relationshipType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZoneCities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZoneCities(ZoneCity zoneCity)
        {
            base.AddObject("ZoneCities", zoneCity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ZoneKaryakars EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZoneKaryakars(ZoneKaryakar zoneKaryakar)
        {
            base.AddObject("ZoneKaryakars", zoneKaryakar);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Zones EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToZones(Zone zone)
        {
            base.AddObject("Zones", zone);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        public static Address CreateAddress(global::System.Int32 addressId)
        {
            Address address = new Address();
            address.AddressId = addressId;
            return address;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                if (_AddressId != value)
                {
                    OnAddressIdChanging(value);
                    ReportPropertyChanging("AddressId");
                    _AddressId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressId");
                    OnAddressIdChanged();
                }
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StreetNo
        {
            get
            {
                return _StreetNo;
            }
            set
            {
                OnStreetNoChanging(value);
                ReportPropertyChanging("StreetNo");
                _StreetNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StreetNo");
                OnStreetNoChanged();
            }
        }
        private global::System.String _StreetNo;
        partial void OnStreetNoChanging(global::System.String value);
        partial void OnStreetNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApartmentNo
        {
            get
            {
                return _ApartmentNo;
            }
            set
            {
                OnApartmentNoChanging(value);
                ReportPropertyChanging("ApartmentNo");
                _ApartmentNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApartmentNo");
                OnApartmentNoChanged();
            }
        }
        private global::System.String _ApartmentNo;
        partial void OnApartmentNoChanging(global::System.String value);
        partial void OnApartmentNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Zip
        {
            get
            {
                return _Zip;
            }
            set
            {
                OnZipChanging(value);
                ReportPropertyChanging("Zip");
                _Zip = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Zip");
                OnZipChanged();
            }
        }
        private global::System.String _Zip;
        partial void OnZipChanging(global::System.String value);
        partial void OnZipChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_Addresses_CityId", "CityNames")]
        public CityName CityName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityName>("BAPSLansdaleModel.FK_Addresses_CityId", "CityNames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityName>("BAPSLansdaleModel.FK_Addresses_CityId", "CityNames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityName> CityNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityName>("BAPSLansdaleModel.FK_Addresses_CityId", "CityNames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityName>("BAPSLansdaleModel.FK_Addresses_CityId", "CityNames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_Persons_AddressID", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("BAPSLansdaleModel.FK_Persons_AddressID", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("BAPSLansdaleModel.FK_Persons_AddressID", "Persons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_ZoneKaryakar_AddressID", "ZoneKaryakar")]
        public EntityCollection<ZoneKaryakar> ZoneKaryakars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZoneKaryakar>("BAPSLansdaleModel.FK_ZoneKaryakar_AddressID", "ZoneKaryakar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZoneKaryakar>("BAPSLansdaleModel.FK_ZoneKaryakar_AddressID", "ZoneKaryakar", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        public static Category CreateCategory(global::System.Int32 categoryId)
        {
            Category category = new Category();
            category.CategoryId = categoryId;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                if (_CategoryId != value)
                {
                    OnCategoryIdChanging(value);
                    ReportPropertyChanging("CategoryId");
                    _CategoryId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryId");
                    OnCategoryIdChanged();
                }
            }
        }
        private global::System.Int32 _CategoryId;
        partial void OnCategoryIdChanging(global::System.Int32 value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_Persons_CategoryId", "Persons")]
        public EntityCollection<Person> Persons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("BAPSLansdaleModel.FK_Persons_CategoryId", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("BAPSLansdaleModel.FK_Persons_CategoryId", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="CityName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CityName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CityName object.
        /// </summary>
        /// <param name="cityId">Initial value of the CityId property.</param>
        /// <param name="cityName1">Initial value of the CityName1 property.</param>
        /// <param name="state">Initial value of the State property.</param>
        public static CityName CreateCityName(global::System.Int32 cityId, global::System.String cityName1, global::System.String state)
        {
            CityName cityName = new CityName();
            cityName.CityId = cityId;
            cityName.CityName1 = cityName1;
            cityName.State = state;
            return cityName;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                if (_CityId != value)
                {
                    OnCityIdChanging(value);
                    ReportPropertyChanging("CityId");
                    _CityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CityId");
                    OnCityIdChanged();
                }
            }
        }
        private global::System.Int32 _CityId;
        partial void OnCityIdChanging(global::System.Int32 value);
        partial void OnCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityName1
        {
            get
            {
                return _CityName1;
            }
            set
            {
                OnCityName1Changing(value);
                ReportPropertyChanging("CityName1");
                _CityName1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityName1");
                OnCityName1Changed();
            }
        }
        private global::System.String _CityName1;
        partial void OnCityName1Changing(global::System.String value);
        partial void OnCityName1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_Addresses_CityId", "Addresses")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("BAPSLansdaleModel.FK_Addresses_CityId", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("BAPSLansdaleModel.FK_Addresses_CityId", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_zonecities_CityNames", "ZoneCities")]
        public EntityCollection<ZoneCity> ZoneCities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZoneCity>("BAPSLansdaleModel.FK_zonecities_CityNames", "ZoneCities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZoneCity>("BAPSLansdaleModel.FK_zonecities_CityNames", "ZoneCities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="EventFlag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventFlag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventFlag object.
        /// </summary>
        /// <param name="eventFlagID">Initial value of the EventFlagID property.</param>
        /// <param name="flagName">Initial value of the FlagName property.</param>
        public static EventFlag CreateEventFlag(global::System.Int32 eventFlagID, global::System.String flagName)
        {
            EventFlag eventFlag = new EventFlag();
            eventFlag.EventFlagID = eventFlagID;
            eventFlag.FlagName = flagName;
            return eventFlag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventFlagID
        {
            get
            {
                return _EventFlagID;
            }
            set
            {
                if (_EventFlagID != value)
                {
                    OnEventFlagIDChanging(value);
                    ReportPropertyChanging("EventFlagID");
                    _EventFlagID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EventFlagID");
                    OnEventFlagIDChanged();
                }
            }
        }
        private global::System.Int32 _EventFlagID;
        partial void OnEventFlagIDChanging(global::System.Int32 value);
        partial void OnEventFlagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FlagName
        {
            get
            {
                return _FlagName;
            }
            set
            {
                OnFlagNameChanging(value);
                ReportPropertyChanging("FlagName");
                _FlagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FlagName");
                OnFlagNameChanged();
            }
        }
        private global::System.String _FlagName;
        partial void OnFlagNameChanging(global::System.String value);
        partial void OnFlagNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonEventFlags_EventFlagId", "PersonEventFlags")]
        public EntityCollection<PersonEventFlag> PersonEventFlags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonEventFlag>("BAPSLansdaleModel.FK_PersonEventFlags_EventFlagId", "PersonEventFlags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonEventFlag>("BAPSLansdaleModel.FK_PersonEventFlags_EventFlagId", "PersonEventFlags", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="addressId">Initial value of the AddressId property.</param>
        public static Person CreatePerson(global::System.Int32 personID, global::System.String firstName, global::System.String lastName, global::System.Int32 addressId)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.AddressId = addressId;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBadAddress
        {
            get
            {
                return _IsBadAddress;
            }
            set
            {
                OnIsBadAddressChanging(value);
                ReportPropertyChanging("IsBadAddress");
                _IsBadAddress = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBadAddress");
                OnIsBadAddressChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBadAddress;
        partial void OnIsBadAddressChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBadAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfBirth;
        partial void OnDateOfBirthChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsKarykar
        {
            get
            {
                return _IsKarykar;
            }
            set
            {
                OnIsKarykarChanging(value);
                ReportPropertyChanging("IsKarykar");
                _IsKarykar = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsKarykar");
                OnIsKarykarChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsKarykar;
        partial void OnIsKarykarChanging(Nullable<global::System.Boolean> value);
        partial void OnIsKarykarChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private global::System.Int32 _AddressId;
        partial void OnAddressIdChanging(global::System.Int32 value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellPhone
        {
            get
            {
                return _CellPhone;
            }
            set
            {
                OnCellPhoneChanging(value);
                ReportPropertyChanging("CellPhone");
                _CellPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellPhone");
                OnCellPhoneChanged();
            }
        }
        private global::System.String _CellPhone;
        partial void OnCellPhoneChanging(global::System.String value);
        partial void OnCellPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Native
        {
            get
            {
                return _Native;
            }
            set
            {
                OnNativeChanging(value);
                ReportPropertyChanging("Native");
                _Native = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Native");
                OnNativeChanged();
            }
        }
        private global::System.String _Native;
        partial void OnNativeChanging(global::System.String value);
        partial void OnNativeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EntryDate
        {
            get
            {
                return _EntryDate;
            }
            set
            {
                OnEntryDateChanging(value);
                ReportPropertyChanging("EntryDate");
                _EntryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryDate");
                OnEntryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EntryDate;
        partial void OnEntryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEntryDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifyDate
        {
            get
            {
                return _ModifyDate;
            }
            set
            {
                OnModifyDateChanging(value);
                ReportPropertyChanging("ModifyDate");
                _ModifyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifyDate");
                OnModifyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifyDate;
        partial void OnModifyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KarykarId
        {
            get
            {
                return _KarykarId;
            }
            set
            {
                OnKarykarIdChanging(value);
                ReportPropertyChanging("KarykarId");
                _KarykarId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KarykarId");
                OnKarykarIdChanged();
            }
        }
        private Nullable<global::System.Int32> _KarykarId;
        partial void OnKarykarIdChanging(Nullable<global::System.Int32> value);
        partial void OnKarykarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OldPhoneNo
        {
            get
            {
                return _OldPhoneNo;
            }
            set
            {
                OnOldPhoneNoChanging(value);
                ReportPropertyChanging("OldPhoneNo");
                _OldPhoneNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OldPhoneNo");
                OnOldPhoneNoChanged();
            }
        }
        private global::System.String _OldPhoneNo;
        partial void OnOldPhoneNoChanging(global::System.String value);
        partial void OnOldPhoneNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ConsiderForSampark
        {
            get
            {
                return _ConsiderForSampark;
            }
            set
            {
                OnConsiderForSamparkChanging(value);
                ReportPropertyChanging("ConsiderForSampark");
                _ConsiderForSampark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConsiderForSampark");
                OnConsiderForSamparkChanged();
            }
        }
        private Nullable<global::System.Boolean> _ConsiderForSampark;
        partial void OnConsiderForSamparkChanging(Nullable<global::System.Boolean> value);
        partial void OnConsiderForSamparkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_Persons_AddressID", "Addresses")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("BAPSLansdaleModel.FK_Persons_AddressID", "Addresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("BAPSLansdaleModel.FK_Persons_AddressID", "Addresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("BAPSLansdaleModel.FK_Persons_AddressID", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("BAPSLansdaleModel.FK_Persons_AddressID", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_Persons_CategoryId", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("BAPSLansdaleModel.FK_Persons_CategoryId", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("BAPSLansdaleModel.FK_Persons_CategoryId", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("BAPSLansdaleModel.FK_Persons_CategoryId", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("BAPSLansdaleModel.FK_Persons_CategoryId", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonEventFlags_PersonId", "PersonEventFlags")]
        public EntityCollection<PersonEventFlag> PersonEventFlags
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonEventFlag>("BAPSLansdaleModel.FK_PersonEventFlags_PersonId", "PersonEventFlags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonEventFlag>("BAPSLansdaleModel.FK_PersonEventFlags_PersonId", "PersonEventFlags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_PersonId", "PersonRelationships")]
        public EntityCollection<PersonRelationship> PersonRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRelationship>("BAPSLansdaleModel.FK_PersonRelationShips_PersonId", "PersonRelationships");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRelationship>("BAPSLansdaleModel.FK_PersonRelationShips_PersonId", "PersonRelationships", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_RelatedPersonId", "PersonRelationships")]
        public EntityCollection<PersonRelationship> PersonRelationships1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRelationship>("BAPSLansdaleModel.FK_PersonRelationShips_RelatedPersonId", "PersonRelationships");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRelationship>("BAPSLansdaleModel.FK_PersonRelationShips_RelatedPersonId", "PersonRelationships", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="PersonEventFlag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonEventFlag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonEventFlag object.
        /// </summary>
        /// <param name="personEventFlagID">Initial value of the PersonEventFlagID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="eventFlagID">Initial value of the EventFlagID property.</param>
        public static PersonEventFlag CreatePersonEventFlag(global::System.Int32 personEventFlagID, global::System.Int32 personID, global::System.Int32 eventFlagID)
        {
            PersonEventFlag personEventFlag = new PersonEventFlag();
            personEventFlag.PersonEventFlagID = personEventFlagID;
            personEventFlag.PersonID = personID;
            personEventFlag.EventFlagID = eventFlagID;
            return personEventFlag;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonEventFlagID
        {
            get
            {
                return _PersonEventFlagID;
            }
            set
            {
                if (_PersonEventFlagID != value)
                {
                    OnPersonEventFlagIDChanging(value);
                    ReportPropertyChanging("PersonEventFlagID");
                    _PersonEventFlagID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonEventFlagID");
                    OnPersonEventFlagIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonEventFlagID;
        partial void OnPersonEventFlagIDChanging(global::System.Int32 value);
        partial void OnPersonEventFlagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EventFlagID
        {
            get
            {
                return _EventFlagID;
            }
            set
            {
                OnEventFlagIDChanging(value);
                ReportPropertyChanging("EventFlagID");
                _EventFlagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EventFlagID");
                OnEventFlagIDChanged();
            }
        }
        private global::System.Int32 _EventFlagID;
        partial void OnEventFlagIDChanging(global::System.Int32 value);
        partial void OnEventFlagIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonEventFlags_EventFlagId", "EventFlags")]
        public EventFlag EventFlag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventFlag>("BAPSLansdaleModel.FK_PersonEventFlags_EventFlagId", "EventFlags").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventFlag>("BAPSLansdaleModel.FK_PersonEventFlags_EventFlagId", "EventFlags").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventFlag> EventFlagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventFlag>("BAPSLansdaleModel.FK_PersonEventFlags_EventFlagId", "EventFlags");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventFlag>("BAPSLansdaleModel.FK_PersonEventFlags_EventFlagId", "EventFlags", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonEventFlags_PersonId", "Persons")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonEventFlags_PersonId", "Persons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonEventFlags_PersonId", "Persons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonEventFlags_PersonId", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("BAPSLansdaleModel.FK_PersonEventFlags_PersonId", "Persons", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="PersonRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonRelationship object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="relatedPersonID">Initial value of the RelatedPersonID property.</param>
        /// <param name="relationshipTypeID">Initial value of the RelationshipTypeID property.</param>
        public static PersonRelationship CreatePersonRelationship(global::System.Int32 personID, global::System.Int32 relatedPersonID, global::System.Int32 relationshipTypeID)
        {
            PersonRelationship personRelationship = new PersonRelationship();
            personRelationship.PersonID = personID;
            personRelationship.RelatedPersonID = relatedPersonID;
            personRelationship.RelationshipTypeID = relationshipTypeID;
            return personRelationship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelatedPersonID
        {
            get
            {
                return _RelatedPersonID;
            }
            set
            {
                if (_RelatedPersonID != value)
                {
                    OnRelatedPersonIDChanging(value);
                    ReportPropertyChanging("RelatedPersonID");
                    _RelatedPersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelatedPersonID");
                    OnRelatedPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _RelatedPersonID;
        partial void OnRelatedPersonIDChanging(global::System.Int32 value);
        partial void OnRelatedPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipTypeID
        {
            get
            {
                return _RelationshipTypeID;
            }
            set
            {
                OnRelationshipTypeIDChanging(value);
                ReportPropertyChanging("RelationshipTypeID");
                _RelationshipTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelationshipTypeID");
                OnRelationshipTypeIDChanged();
            }
        }
        private global::System.Int32 _RelationshipTypeID;
        partial void OnRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnRelationshipTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_PersonId", "Persons")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonRelationShips_PersonId", "Persons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonRelationShips_PersonId", "Persons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonRelationShips_PersonId", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("BAPSLansdaleModel.FK_PersonRelationShips_PersonId", "Persons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_RelatedPersonId", "Persons")]
        public Person Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonRelationShips_RelatedPersonId", "Persons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonRelationShips_RelatedPersonId", "Persons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("BAPSLansdaleModel.FK_PersonRelationShips_RelatedPersonId", "Persons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("BAPSLansdaleModel.FK_PersonRelationShips_RelatedPersonId", "Persons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_RelationshipTypeID", "RelationshipTypes")]
        public RelationshipType RelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("BAPSLansdaleModel.FK_PersonRelationShips_RelationshipTypeID", "RelationshipTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("BAPSLansdaleModel.FK_PersonRelationShips_RelationshipTypeID", "RelationshipTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelationshipType> RelationshipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("BAPSLansdaleModel.FK_PersonRelationShips_RelationshipTypeID", "RelationshipTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelationshipType>("BAPSLansdaleModel.FK_PersonRelationShips_RelationshipTypeID", "RelationshipTypes", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="RelationshipType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelationshipType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelationshipType object.
        /// </summary>
        /// <param name="relationshipTypeID">Initial value of the RelationshipTypeID property.</param>
        public static RelationshipType CreateRelationshipType(global::System.Int32 relationshipTypeID)
        {
            RelationshipType relationshipType = new RelationshipType();
            relationshipType.RelationshipTypeID = relationshipTypeID;
            return relationshipType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipTypeID
        {
            get
            {
                return _RelationshipTypeID;
            }
            set
            {
                if (_RelationshipTypeID != value)
                {
                    OnRelationshipTypeIDChanging(value);
                    ReportPropertyChanging("RelationshipTypeID");
                    _RelationshipTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RelationshipTypeID");
                    OnRelationshipTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _RelationshipTypeID;
        partial void OnRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnRelationshipTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelationshipType1
        {
            get
            {
                return _RelationshipType1;
            }
            set
            {
                OnRelationshipType1Changing(value);
                ReportPropertyChanging("RelationshipType1");
                _RelationshipType1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelationshipType1");
                OnRelationshipType1Changed();
            }
        }
        private global::System.String _RelationshipType1;
        partial void OnRelationshipType1Changing(global::System.String value);
        partial void OnRelationshipType1Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_PersonRelationShips_RelationshipTypeID", "PersonRelationships")]
        public EntityCollection<PersonRelationship> PersonRelationships
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRelationship>("BAPSLansdaleModel.FK_PersonRelationShips_RelationshipTypeID", "PersonRelationships");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRelationship>("BAPSLansdaleModel.FK_PersonRelationShips_RelationshipTypeID", "PersonRelationships", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Role CreateRole(global::System.Int32 roleId, global::System.String name)
        {
            Role role = new Role();
            role.RoleId = roleId;
            role.Name = name;
            return role;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_Users_RoleId", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("BAPSLansdaleModel.FK_Users_RoleId", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("BAPSLansdaleModel.FK_Users_RoleId", "User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="needsPasswordChange">Initial value of the NeedsPasswordChange property.</param>
        public static User CreateUser(global::System.Int32 userId, global::System.String userName, global::System.String password, global::System.Boolean active, global::System.String email, global::System.String passwordSalt, global::System.Int32 roleID, global::System.Boolean needsPasswordChange)
        {
            User user = new User();
            user.UserId = userId;
            user.UserName = userName;
            user.Password = password;
            user.Active = active;
            user.Email = email;
            user.PasswordSalt = passwordSalt;
            user.RoleID = roleID;
            user.NeedsPasswordChange = needsPasswordChange;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLogin;
        partial void OnLastLoginChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NeedsPasswordChange
        {
            get
            {
                return _NeedsPasswordChange;
            }
            set
            {
                OnNeedsPasswordChangeChanging(value);
                ReportPropertyChanging("NeedsPasswordChange");
                _NeedsPasswordChange = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedsPasswordChange");
                OnNeedsPasswordChangeChanged();
            }
        }
        private global::System.Boolean _NeedsPasswordChange;
        partial void OnNeedsPasswordChangeChanging(global::System.Boolean value);
        partial void OnNeedsPasswordChangeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_Users_RoleId", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAPSLansdaleModel.FK_Users_RoleId", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAPSLansdaleModel.FK_Users_RoleId", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAPSLansdaleModel.FK_Users_RoleId", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BAPSLansdaleModel.FK_Users_RoleId", "Role", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="Zone")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Zone : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Zone object.
        /// </summary>
        /// <param name="zoneId">Initial value of the ZoneId property.</param>
        /// <param name="zoneName">Initial value of the ZoneName property.</param>
        public static Zone CreateZone(global::System.Int32 zoneId, global::System.String zoneName)
        {
            Zone zone = new Zone();
            zone.ZoneId = zoneId;
            zone.ZoneName = zoneName;
            return zone;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneId
        {
            get
            {
                return _ZoneId;
            }
            set
            {
                if (_ZoneId != value)
                {
                    OnZoneIdChanging(value);
                    ReportPropertyChanging("ZoneId");
                    _ZoneId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneId");
                    OnZoneIdChanged();
                }
            }
        }
        private global::System.Int32 _ZoneId;
        partial void OnZoneIdChanging(global::System.Int32 value);
        partial void OnZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ZoneName
        {
            get
            {
                return _ZoneName;
            }
            set
            {
                OnZoneNameChanging(value);
                ReportPropertyChanging("ZoneName");
                _ZoneName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ZoneName");
                OnZoneNameChanged();
            }
        }
        private global::System.String _ZoneName;
        partial void OnZoneNameChanging(global::System.String value);
        partial void OnZoneNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZoneLeadId
        {
            get
            {
                return _ZoneLeadId;
            }
            set
            {
                OnZoneLeadIdChanging(value);
                ReportPropertyChanging("ZoneLeadId");
                _ZoneLeadId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneLeadId");
                OnZoneLeadIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ZoneLeadId;
        partial void OnZoneLeadIdChanging(Nullable<global::System.Int32> value);
        partial void OnZoneLeadIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_zonecities_zones", "ZoneCities")]
        public EntityCollection<ZoneCity> ZoneCities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZoneCity>("BAPSLansdaleModel.FK_zonecities_zones", "ZoneCities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZoneCity>("BAPSLansdaleModel.FK_zonecities_zones", "ZoneCities", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_ZoneKaryakar_zones", "ZoneKaryakar")]
        public EntityCollection<ZoneKaryakar> ZoneKaryakars
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ZoneKaryakar>("BAPSLansdaleModel.FK_ZoneKaryakar_zones", "ZoneKaryakar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ZoneKaryakar>("BAPSLansdaleModel.FK_ZoneKaryakar_zones", "ZoneKaryakar", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="ZoneCity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZoneCity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ZoneCity object.
        /// </summary>
        /// <param name="zoneCityId">Initial value of the ZoneCityId property.</param>
        public static ZoneCity CreateZoneCity(global::System.Int32 zoneCityId)
        {
            ZoneCity zoneCity = new ZoneCity();
            zoneCity.ZoneCityId = zoneCityId;
            return zoneCity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneCityId
        {
            get
            {
                return _ZoneCityId;
            }
            set
            {
                if (_ZoneCityId != value)
                {
                    OnZoneCityIdChanging(value);
                    ReportPropertyChanging("ZoneCityId");
                    _ZoneCityId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneCityId");
                    OnZoneCityIdChanged();
                }
            }
        }
        private global::System.Int32 _ZoneCityId;
        partial void OnZoneCityIdChanging(global::System.Int32 value);
        partial void OnZoneCityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZoneId
        {
            get
            {
                return _ZoneId;
            }
            set
            {
                OnZoneIdChanging(value);
                ReportPropertyChanging("ZoneId");
                _ZoneId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneId");
                OnZoneIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ZoneId;
        partial void OnZoneIdChanging(Nullable<global::System.Int32> value);
        partial void OnZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityName
        {
            get
            {
                return _CityName;
            }
            set
            {
                OnCityNameChanging(value);
                ReportPropertyChanging("CityName");
                _CityName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityName");
                OnCityNameChanged();
            }
        }
        private global::System.String _CityName;
        partial void OnCityNameChanging(global::System.String value);
        partial void OnCityNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CityId
        {
            get
            {
                return _CityId;
            }
            set
            {
                OnCityIdChanging(value);
                ReportPropertyChanging("CityId");
                _CityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CityId");
                OnCityIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CityId;
        partial void OnCityIdChanging(Nullable<global::System.Int32> value);
        partial void OnCityIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_zonecities_CityNames", "CityNames")]
        public CityName CityName1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityName>("BAPSLansdaleModel.FK_zonecities_CityNames", "CityNames").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityName>("BAPSLansdaleModel.FK_zonecities_CityNames", "CityNames").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CityName> CityName1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CityName>("BAPSLansdaleModel.FK_zonecities_CityNames", "CityNames");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CityName>("BAPSLansdaleModel.FK_zonecities_CityNames", "CityNames", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_zonecities_zones", "Zones")]
        public Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("BAPSLansdaleModel.FK_zonecities_zones", "Zones").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("BAPSLansdaleModel.FK_zonecities_zones", "Zones").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("BAPSLansdaleModel.FK_zonecities_zones", "Zones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Zone>("BAPSLansdaleModel.FK_zonecities_zones", "Zones", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAPSLansdaleModel", Name="ZoneKaryakar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ZoneKaryakar : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ZoneKaryakar object.
        /// </summary>
        /// <param name="zoneKarykarId">Initial value of the ZoneKarykarId property.</param>
        public static ZoneKaryakar CreateZoneKaryakar(global::System.Int32 zoneKarykarId)
        {
            ZoneKaryakar zoneKaryakar = new ZoneKaryakar();
            zoneKaryakar.ZoneKarykarId = zoneKarykarId;
            return zoneKaryakar;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ZoneKarykarId
        {
            get
            {
                return _ZoneKarykarId;
            }
            set
            {
                if (_ZoneKarykarId != value)
                {
                    OnZoneKarykarIdChanging(value);
                    ReportPropertyChanging("ZoneKarykarId");
                    _ZoneKarykarId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ZoneKarykarId");
                    OnZoneKarykarIdChanged();
                }
            }
        }
        private global::System.Int32 _ZoneKarykarId;
        partial void OnZoneKarykarIdChanging(global::System.Int32 value);
        partial void OnZoneKarykarIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ZoneId
        {
            get
            {
                return _ZoneId;
            }
            set
            {
                OnZoneIdChanging(value);
                ReportPropertyChanging("ZoneId");
                _ZoneId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ZoneId");
                OnZoneIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ZoneId;
        partial void OnZoneIdChanging(Nullable<global::System.Int32> value);
        partial void OnZoneIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressId
        {
            get
            {
                return _AddressId;
            }
            set
            {
                OnAddressIdChanging(value);
                ReportPropertyChanging("AddressId");
                _AddressId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressId");
                OnAddressIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressId;
        partial void OnAddressIdChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note1
        {
            get
            {
                return _Note1;
            }
            set
            {
                OnNote1Changing(value);
                ReportPropertyChanging("Note1");
                _Note1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note1");
                OnNote1Changed();
            }
        }
        private global::System.String _Note1;
        partial void OnNote1Changing(global::System.String value);
        partial void OnNote1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note2
        {
            get
            {
                return _Note2;
            }
            set
            {
                OnNote2Changing(value);
                ReportPropertyChanging("Note2");
                _Note2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note2");
                OnNote2Changed();
            }
        }
        private global::System.String _Note2;
        partial void OnNote2Changing(global::System.String value);
        partial void OnNote2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note3
        {
            get
            {
                return _Note3;
            }
            set
            {
                OnNote3Changing(value);
                ReportPropertyChanging("Note3");
                _Note3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note3");
                OnNote3Changed();
            }
        }
        private global::System.String _Note3;
        partial void OnNote3Changing(global::System.String value);
        partial void OnNote3Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_ZoneKaryakar_AddressID", "Addresses")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("BAPSLansdaleModel.FK_ZoneKaryakar_AddressID", "Addresses").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("BAPSLansdaleModel.FK_ZoneKaryakar_AddressID", "Addresses").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("BAPSLansdaleModel.FK_ZoneKaryakar_AddressID", "Addresses");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("BAPSLansdaleModel.FK_ZoneKaryakar_AddressID", "Addresses", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAPSLansdaleModel", "FK_ZoneKaryakar_zones", "Zones")]
        public Zone Zone
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("BAPSLansdaleModel.FK_ZoneKaryakar_zones", "Zones").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("BAPSLansdaleModel.FK_ZoneKaryakar_zones", "Zones").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Zone> ZoneReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Zone>("BAPSLansdaleModel.FK_ZoneKaryakar_zones", "Zones");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Zone>("BAPSLansdaleModel.FK_ZoneKaryakar_zones", "Zones", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
